{
  "kind": "youtube#playlistItemListResponse",
  "etag": "hI-BUqZfOVJ28NRh8jtzyfV-Ib8",
  "items": [
    {
      "kind": "youtube#playlistItem",
      "etag": "AYkT8TNqKlvIOpo4jKSUehd1tPI",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi41NkI0NEY2RDEwNTU3Q0M2",
      "snippet": {
        "publishedAt": "2016-06-05T09:44:59Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Jonas Gebhardt - Evolving the Visual Programming Environment with React at react-europe 2016",
        "description": "Tools shape our thinking. The \"React Way\" of thinking has already found many applications beyond building user interfaces. Particularly, React's functional, component-based design makes it an ideal candidate for building a better Visual Programming Environment. We'll examine how to overcome challenges such as lack of standardized APIs and limits of composition, and show how we can drastically improve the way humans create digital artifacts today.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/WjJdaDXN5Vs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/WjJdaDXN5Vs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/WjJdaDXN5Vs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/WjJdaDXN5Vs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/WjJdaDXN5Vs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 0,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "WjJdaDXN5Vs"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "WjJdaDXN5Vs",
        "videoPublishedAt": "2016-06-06T08:13:50Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Ou3_-skGB2XwP16UHVVBMoxU7P8",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi4yODlGNEE0NkRGMEEzMEQy",
      "snippet": {
        "publishedAt": "2016-06-05T10:12:34Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Bonnie Eisenman - React Native Retrospective at react-europe 2016",
        "description": "Remember when React Native beta access was shared illicitly via flash drives behind closed doors? Since its first release in January 2015, React Native has experienced incredible growth and adoption. We'll discuss the evolution of React Native over the last year, looking at the maturation of the library as well as the ever-increasing community around it. From the release of Android support to the focus on better build systems and asset management, to the influx of interest from \"traditional\" mobile developers, there's a lot to take in. Understanding how we reached the present will help us see where we're going next. What problems remain to be solved? How will React Native continue to evolve and grow?",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-vl57brMWNg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-vl57brMWNg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-vl57brMWNg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-vl57brMWNg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-vl57brMWNg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 1,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-vl57brMWNg"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "-vl57brMWNg",
        "videoPublishedAt": "2016-06-06T11:23:31Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "kmAQEgYJMS6E6M2p8OBAkwtb9wU",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi4wMTcyMDhGQUE4NTIzM0Y5",
      "snippet": {
        "publishedAt": "2016-06-06T12:01:45Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Max Stoiber & Nik Graf - The Evolution of React UI Development at react-europe 2016",
        "description": "Hot reloading makes for a great Developer Experience, but we can do even better. Using interactive style guides that show our components in a variety of different states we can test their look and feel in diverse situations.\nCollaborate with designers and marketers on testing them and pushing them to their limits. UI fuzz testing can help us discover combinations of props we haven't even thought of so we catch potential UI issues early on.\nIn the future, we might be able to detect styling and layout issues. Integrating these checks into our Continuous Integration system means we could catch potential problems with our components before any user can see them.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/0IkWuXeKPV0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/0IkWuXeKPV0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/0IkWuXeKPV0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/0IkWuXeKPV0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/0IkWuXeKPV0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 2,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "0IkWuXeKPV0"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "0IkWuXeKPV0",
        "videoPublishedAt": "2016-06-06T12:01:56Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "iZWegkB2P8Sk4HmWeSog-RXMUrc",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi41MjE1MkI0OTQ2QzJGNzNG",
      "snippet": {
        "publishedAt": "2016-06-06T17:37:50Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Andrew Clark - Recomposing your React application at react-europe 2016",
        "description": "Recompose is a functional utility library for React components. It provides a suite of higher-order components that encapsulate common React patterns. In this talk, Iâ€™ll describe the history and rationale of the library, and discuss strategies for building React apps for scalability and reuse.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/zD_judE-bXk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/zD_judE-bXk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/zD_judE-bXk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/zD_judE-bXk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/zD_judE-bXk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 3,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "zD_judE-bXk"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "zD_judE-bXk",
        "videoPublishedAt": "2016-06-06T17:37:49Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "yyzR--KSXPYBToucavGS4MqtO9g",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi4wOTA3OTZBNzVEMTUzOTMy",
      "snippet": {
        "publishedAt": "2016-06-06T18:31:56Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Tadeu Zagallo - JavaScript, React Native and Performance at react-europe 2016",
        "description": "With React Native, some of your applications core functionalities, that would previously be written in native code, are now implemented in JavaScript. And that's great! Now you can use things like Hot Module Reloading and ship updates to your app whenever you want. But what about performance and User Experience? Is JavaScript fast enough to replace native code? I'm going to talk about some of the challenges we are working on at the React Native Performance team.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/1oL_OJ3UePU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/1oL_OJ3UePU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/1oL_OJ3UePU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/1oL_OJ3UePU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/1oL_OJ3UePU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 4,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "1oL_OJ3UePU"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "1oL_OJ3UePU",
        "videoPublishedAt": "2016-06-06T18:31:37Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "0w5Ns2w5ljUNq-dmkSF3d8CH6so",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi4xMkVGQjNCMUM1N0RFNEUx",
      "snippet": {
        "publishedAt": "2016-06-06T18:49:22Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Jafar Husain - Falcor: One Model Everywhere at react-europe 2016",
        "description": "Imagine how easy building your web application would be if all of your data was available in-memory on the client. Falcor lets you to code that way.\n\nFalcor is the open-source, JS data access framework that powers Netflix. Falcor lets you represent all of your cloud data sources as one virtual JSON model on the server. On the client, Falcor makes it appear as if the entire JSON model is available locally and allows you to access data the same way you would from an in-memory JSON object. Falcor retrieves the model data you request from the cloud on-demand, transparently handling all the network communication and keeping the server and client in sync.\n\nCome learn about how Netflix integrates React and Falcor.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/nxQweyTUj5s/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/nxQweyTUj5s/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/nxQweyTUj5s/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/nxQweyTUj5s/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/nxQweyTUj5s/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 5,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "nxQweyTUj5s"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "nxQweyTUj5s",
        "videoPublishedAt": "2016-06-06T19:01:30Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "VPGWtLwGS1toy9Z5kFGOPKEwvbE",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi5DQUNERDQ2NkIzRUQxNTY1",
      "snippet": {
        "publishedAt": "2016-06-07T13:30:53Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Brent Vatne - Building li.st for Android with Exponent and React Native at react-europe 2016",
        "description": "li.st for Android is likely one of the largest pure React Native codebases around at this time. The only native modules that we use are generic and included in Exponent because they would apply to many other apps (social login, image picker, push notifications) -- otherwise it's JavaScript all the way down. The functionality that li.st provides covers a wide range of common patterns that you'll find in most apps, which is one of the reasons why we wanted to build it in the first place: to test the limits of Exponent and React Native with in real world scenarios. Living on the edge with both React Native and Exponent, you'd be right to guess that we ran into our fair share of problems. You're going to encounter most of these problems if you are building a big React Native app (possibly some for React DOM apps) in the next year and I'm here to let you know that you're not alone and arm you with some knowledge you'll want when building a large app.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cI9bDvDEsYE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cI9bDvDEsYE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cI9bDvDEsYE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/cI9bDvDEsYE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/cI9bDvDEsYE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 6,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "cI9bDvDEsYE"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "cI9bDvDEsYE",
        "videoPublishedAt": "2016-06-07T12:40:06Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "unxe21anZ1E9PFuxZTvJ4sBz5Hw",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi41MzJCQjBCNDIyRkJDN0VD",
      "snippet": {
        "publishedAt": "2016-06-07T13:30:32Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Laney Kuenzel & Lee Byron - GraphQL Future at react-europe 2016",
        "description": "GraphQL was open sourced last year at ReactEurope. Since then, great progress has been made in the open-source ecosystem. Within Facebook, we've experimented with several ways to extend GraphQL beyond a simple request/response model to solve some common problems that product developers face. In this talk, we'll provide a brief review of the open-source work from the past year and then describe several of our internal experiments that will determine the future of GraphQL.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ViXL0YQnioU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ViXL0YQnioU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ViXL0YQnioU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ViXL0YQnioU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ViXL0YQnioU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 7,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ViXL0YQnioU"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "ViXL0YQnioU",
        "videoPublishedAt": "2016-06-07T13:30:30Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "lfZuf2UGnnimE0i51R8xNwCvftM",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi45NDk1REZENzhEMzU5MDQz",
      "snippet": {
        "publishedAt": "2016-06-07T19:56:20Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Martijn Walraven - Building native mobile apps with GraphQL at react-europe 2016",
        "description": "GraphQL was conceived almost four years ago to serve the needs of Facebook's iOS developers. Outside of Facebook however, non-JavaScript GraphQL clients haven't received as much attention. In this talk, I will explore the use of GraphQL to build native mobile apps. I will discuss some of the design decisions faced when developing a native GraphQL client, and illustrate these with examples from a Swift client. Among other things, I will show how to exploit code generation and the strongly typed nature of GraphQL to present a typed interface to query results.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/z5rz3saDPJ8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/z5rz3saDPJ8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/z5rz3saDPJ8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/z5rz3saDPJ8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/z5rz3saDPJ8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 8,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "z5rz3saDPJ8"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "z5rz3saDPJ8",
        "videoPublishedAt": "2016-06-07T19:56:19Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "QopZ0Y7cLqnRnMAUh1OSbvHHYXg",
      "id": "UExDQzQzNkpwVm5LMExUREtXM09fQkdUWm5yWjhkQkFvZi5GNjNDRDREMDQxOThCMDQ2",
      "snippet": {
        "publishedAt": "2016-06-07T20:11:41Z",
        "channelId": "UCorlLn2oZfgOJ-FUcF2eZ1A",
        "title": "Question and Answers with core team members at react-europe 2016",
        "description": "This is the Q&A that took place at the end of the 2016 conference with members from the core team of react.js, react native, graphql, flowtype, babel.js, reason and more.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/5pMDd1t2thc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/5pMDd1t2thc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/5pMDd1t2thc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/5pMDd1t2thc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/5pMDd1t2thc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "ReactEurope",
        "playlistId": "PLCC436JpVnK0LTDKW3O_BGTZnrZ8dBAof",
        "position": 9,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "5pMDd1t2thc"
        },
        "videoOwnerChannelTitle": "ReactEurope",
        "videoOwnerChannelId": "UCorlLn2oZfgOJ-FUcF2eZ1A"
      },
      "contentDetails": {
        "videoId": "5pMDd1t2thc",
        "videoPublishedAt": "2016-06-07T20:11:40Z"
      },
      "status": {
        "privacyStatus": "public"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 10,
    "resultsPerPage": 50
  }
}